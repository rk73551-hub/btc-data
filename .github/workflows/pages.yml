name: Mirror BTC data to GitHub Pages

on:
  workflow_dispatch:
  schedule:
    - cron: "0 * * * *"  # hourly

permissions:
  contents: write
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      PROXY_BASE: https://btc-proxy-ztjr.vercel.app/api/proxy
    steps:
      - name: Checkout repository (default branch)
        uses: actions/checkout@v4

      - name: Create public dir
        run: mkdir -p public

      - name: Compute time windows (UTC)
        id: times
        run: |
          SINCE_24H=$(date -u -d '24 hours ago' +%Y-%m-%dT%H:%M:%SZ)
          SINCE_90D=$(date -u -d '90 days ago' +%Y-%m-%dT%H:%M:%SZ)
          Y=$(date -u +%Y)
          YTD="${Y}-01-01T00:00:00Z"
          echo "since24=${SINCE_24H}" >> $GITHUB_OUTPUT
          echo "since90=${SINCE_90D}" >> $GITHUB_OUTPUT
          echo "ytd=${YTD}" >> $GITHUB_OUTPUT

      # Latest single row (Apps Script supports mode=latest)
      - name: Fetch latest row
        run: |
          curl -sSL "${PROXY_BASE}?mode=latest" -o public/latest.json || echo '{}' > public/latest.json

      # Last 24h via since=… (avoid an unsupported mode)
      - name: Fetch last 24h
        run: |
          curl -sSL "${PROXY_BASE}?since=${{ steps.times.outputs.since24 }}" -o public/last-24h.json || echo '[]' > public/last-24h.json

      # YTD via since=YYYY-01-01T00:00:00Z (no mode=ytd)
      - name: Fetch YTD
        run: |
          curl -sSL "${PROXY_BASE}?since=${{ steps.times.outputs.ytd }}" -o public/ytd.json || echo '[]' > public/ytd.json

      # 90d via since=… (no mode=90d needed)
      - name: Fetch 90d dataset
        run: |
          curl -sSL "${PROXY_BASE}?since=${{ steps.times.outputs.since90 }}" -o public/90d.json || echo '{"rows":[]}' > public/90d.json

      # Compact dashboard summary (your script supports mode=dashboard)
      - name: Fetch dashboard summary (compact)
        run: |
          curl -sSL "${PROXY_BASE}?mode=dashboard" -o public/dashboard.json || echo '{"ok":false}' > public/dashboard.json

      - name: Write timestamp
        run: date -u +"%Y-%m-%dT%H:%M:%SZ" > public/timestamp.txt

      # Commit JSONs to gh-pages (so raw.githubusercontent.com URLs work)
      - name: Prepare gh-pages branch
        run: |
          set -e
          git fetch origin gh-pages || true
          if git show-ref --verify --quiet refs/remotes/origin/gh-pages; then
            git checkout -B gh-pages origin/gh-pages
          else
            git checkout --orphan gh-pages
            git reset --hard
          fi
          cp -f public/latest.json public/last-24h.json public/ytd.json public/90d.json public/dashboard.json public/timestamp.txt .
          git add latest.json last-24h.json ytd.json 90d.json dashboard.json timestamp.txt
          git config user.name "github-actions"
          git config user.email "actions@github.com"
          git commit -m "Update mirrored data" || echo "No changes to commit"
          git push origin gh-pages

      # Also publish to Pages site (optional but fine to keep)
      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: public

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - id: deployment
        uses: actions/deploy-pages@v4
