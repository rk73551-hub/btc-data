name: Mirror BTC data to GitHub Pages

on:
  workflow_dispatch:
  schedule:
    - cron: "*/15 * * * *"   # every 15 minutes

permissions:
  contents: write
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      EXEC: https://script.google.com/macros/s/AKfycbzsDjd0fYUiOLnEYnFkPETvXg4VdLXIqSXX5tUNB1oeJ8o2EqzXXjAVezaNXKMf0lWTHQ/exec

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Create public dir
        run: mkdir -p public

      - name: Sanity ping (health)
        run: |
          set -e
          curl -sSfL --get "$EXEC" \
            --data-urlencode "mode=health" \
            --data-urlencode "token=${{ secrets.APITOKEN }}" \
            -o public/health.json
          grep -qE '^\s*[\[{]' public/health.json || { echo "Health not JSON:"; head -n 40 public/health.json; exit 1; }

      - name: Compute times (24h and YTD)
        id: when
        run: |
          SINCE_24H=$(date -u -d '24 hours ago' +'%Y-%m-%dT%H:%M:%SZ')
          YTD=$(date -u +'%Y-01-01T00:00:00Z')
          echo "since24=$SINCE_24H" >> $GITHUB_OUTPUT
          echo "ytd=$YTD"          >> $GITHUB_OUTPUT

      # LATEST (A:N)
      - name: Fetch latest row
        run: |
          set -e
          curl -sSfL --get "$EXEC" \
            --data-urlencode "mode=ytd" \
            --data-urlencode "limit=1" \
            --data-urlencode "cols=1:14" \
            --data-urlencode "token=${{ secrets.APITOKEN }}" \
            -o public/latest.json
          grep -qE '^\s*[\[{]' public/latest.json || { echo "Latest not JSON:"; head -n 40 public/latest.json; exit 1; }

      # 24H (A:N)
      - name: Fetch last 24h
        run: |
          set -e
          curl -sSfL --get "$EXEC" \
            --data-urlencode "mode=ytd" \
            --data-urlencode "since=${{ steps.when.outputs.since24 }}" \
            --data-urlencode "cols=1:14" \
            --data-urlencode "token=${{ secrets.APITOKEN }}" \
            -o public/last-24h.json
          grep -qE '^\s*[\[{]' public/last-24h.json || { echo "24h not JSON:"; head -n 60 public/last-24h.json; exit 1; }

      # YTD (A:N)
      - name: Fetch YTD
        run: |
          set -e
          curl -sSfL --get "$EXEC" \
            --data-urlencode "mode=ytd" \
            --data-urlencode "since=${{ steps.when.outputs.ytd }}" \
            --data-urlencode "limit=20000" \
            --data-urlencode "cols=1:14" \
            --data-urlencode "token=${{ secrets.APITOKEN }}" \
            -o public/ytd.json
          grep -qE '^\s*[\[{]' public/ytd.json || { echo "YTD not JSON:"; head -n 60 public/ytd.json; exit 1; }

      # 90d (A:N) â€” using 1:14 to match current sheet
      - name: Fetch 90d dataset
        run: |
          set -e
          curl -sSfL --get "$EXEC" \
            --data-urlencode "mode=90d" \
            --data-urlencode "limit=2160" \
            --data-urlencode "cols=1:14" \
            --data-urlencode "token=${{ secrets.APITOKEN }}" \
            -o public/90d.json
          grep -qE '^\s*[\[{]' public/90d.json || { echo "90d not JSON:"; head -n 60 public/90d.json; exit 1; }

      # Dashboard (object)
      - name: Fetch dashboard summary
        run: |
          set -e
          curl -sSfL --get "$EXEC" \
            --data-urlencode "mode=dashboard" \
            --data-urlencode "token=${{ secrets.APITOKEN }}" \
            -o public/dashboard.json
          grep -qE '^\s*{' public/dashboard.json || { echo "Dashboard not JSON:"; head -n 60 public/dashboard.json; exit 1; }

      - name: Write timestamp
        run: date -u +"%Y-%m-%dT%H:%M:%SZ" > public/timestamp.txt

      - name: Quick preview of files
        run: |
          echo "---- latest.json ----"; head -n 2 public/latest.json || true
          echo "---- 24h.json    ----"; head -n 2 public/last-24h.json || true
          echo "---- ytd.json    ----"; head -n 2 public/ytd.json || true
          echo "---- 90d.json    ----"; head -n 2 public/90d.json || true
          echo "---- dashboard   ----"; head -n 20 public/dashboard.json || true

      - name: Commit to gh-pages branch
        run: |
          set -e
          git fetch origin gh-pages || true
          if git show-ref --verify --quiet refs/remotes/origin/gh-pages; then
            git checkout -B gh-pages origin/gh-pages
          else
            git checkout --orphan gh-pages
            git reset --hard
          fi
          cp -f public/latest.json public/last-24h.json public/ytd.json public/90d.json public/dashboard.json public/timestamp.txt .
          git add latest.json last-24h.json ytd.json 90d.json dashboard.json timestamp.txt
          git config user.name "github-actions"
          git config user.email "actions@github.com"
          git commit -m "Update mirrored data" || echo "No changes to commit"
          git push origin gh-pages

      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: public

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - id: deployment
        uses: actions/deploy-pages@v4
